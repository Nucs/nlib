<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>